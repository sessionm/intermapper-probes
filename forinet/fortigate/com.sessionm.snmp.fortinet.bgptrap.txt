 <!--
     SNMP BGP Trap probe for Fortinet Firewalls (com.sessionm.snmp.fortinet.bgp.trap)

     09 Jul 2014 Original version - vachon
-->

<header>
     "type"           =     "custom-snmp-trap"
     "package"        =     "com.sessionm"
     "probe_name"     =     "snmp.fortinet.bgptrap"
     "human_name"     =     "BGP Trap Probe"
     "version"        =     "1.0"
     "address_type"   =     "IP"
     "port_number"    =     "161"
     "display_name"   =     "Fortinet BGP Trap"
</header>

<description>
\GB\Fortinet BGP Trap Proble\P\

This probe waits for a BGP SNMP Trap from a Fortinet Firewall.  These occur on
Establishment and Backwards State Transitions.

BGP Session Status is one of:
  1 = idle
  2 = connect
  3 = active
  4 = opensent
  5 = openconfirm
  6 = BGP session established

</description>

<parameters>
</parameters>

<snmp-device-variables>  

  -- TrapVariables are updated when a trap arrives. 
  -- This set of variables comes from the Dartware MIB 
  -- and would be sent in a trap from another copy of InterMapper.
  
  trapTimeStamp,      1.3.6.1.4.1.6306.2.1.1.0, TRAPVARIABLE, "Timestamp" 
  DeviceStatus,       1.3.6.1.4.1.6306.2.1.2.0, TRAPVARIABLE, "Status"
  DeviceDNS,          1.3.6.1.4.1.6306.2.1.3.0, TRAPVARIABLE, "DNS Name of Device"
  DeviceCondition,    1.3.6.1.4.1.6306.2.1.4.0, TRAPVARIABLE, "Condition String"
  TrapSourceAdrs,     1.3.6.1.4.1.6306.2.1.5.0, TRAPVARIABLE, "Source of trap"
  ProbeType,          1.3.6.1.4.1.6306.2.1.6.0, TRAPVARIABLE, "Probe that generated trap"
  

  -- MIB Variable --     --- OID ---                  --- TYPE ---    --- LEGEND ---

  
  timeStampVar,         $TimeStamp,                   TRAPVARIABLE,  "Timestamp"
  trapOIDVar,           $TrapOID,                     TRAPVARIABLE,  "Trap OID"
  agentAdrsVar,         $AgentAddress,                TRAPVARIABLE,  "Address"
  senderAdrsVar,        $SenderAddress,               TRAPVARIABLE,  "Sender Address"
  sysName,              SNMPv2-MIB::sysName.0,        TRAPVARIABLE,  "Reporting Device"
  bgpPeerRemoteAddr,    BGP4-MIB::bgpPeerRemoteAddr,  TRAPVARIABLE,  "BGP Peer IP Address"
  bgpPeerLastError,     BGP4-MIB::bgpPeerLastError,   TRAPVARIABLE,  "BGP Peer Last Error"
  bgpPeerState,         BGP4-MIB::bgpPeerState,       TRAPVARIABLE,  "BGP Peer State"
  bgpPeerStateParsed,   BGP4-MIB::bgpPeerState,       TRAPVARIABLE-STRING { idle(1), connect(2), active(3), opensent(4), openconfirm(5), established(6) }
</snmp-device-variables>


<snmp-device-thresholds>
  critical: defined("bgpPeerState") && $bgpPeerState <= 3 "BGP Peer $bgpPeerRemoteAddr is not connected at TCP Layer"
   warning: defined("bgpPeerState") && ($bgpPeerState < 6 && $bgpPeerState > 3) "BGP Peer $bgpPeerRemoteAddr is reachable, but BGP non-functional"
      okay: defined("bgpPeerState") && $bgpPeerState == 6 "BGP Peer $bgpPeerRemoteAddr is OK.  Last Error was: $bgpPeerLastError"
</snmp-device-thresholds>


<snmp-device-display>

\B5\BGP Peering Status for BGP Neighbor $BGPPeerIP\0P\ 
  \4\      TimeStamp:\0\  $timeStampVar \3IG\(sysuptime) \P0M\
  \4\   AgentAddress:\0\  $agentAdrsVar
  \4\  SenderAddress:\0\  $senderAdrsVar
  \4\        TrapOID:\0\  $trapOIDVar

\B5\BGP Peering Status Alert Information\0P\ 
  \4\       Reporting Device:\0\  $sysName \3IG\ \P0M\
  \4\            BGP Peer IP:\0\  $bgpPeerRemoteAddr \3IG\  \P0M\
  \4\         BGP Peer State:\0\  $bgpPeerState \3IG\  \P0M\
  \4\ BGP Peer State Meaning:\0\  $bgpPeerStateParsed \3IG\  \P0M\
  \4\  BGP Peer's Last Error:\0\  $bgpPeerLastError \3IG\  \P0M\
</snmp-device-display>
